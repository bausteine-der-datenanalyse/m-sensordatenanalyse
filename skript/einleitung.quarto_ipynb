{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Das Prinzip von Messungen\n",
        "\n",
        "::: {.border layout=\"[[5, 90, 5], [1]]\"}\n",
        "\n",
        "&nbsp;\n",
        "\n",
        "\"In der Physik existiert nur das, was gemessen worden ist\" (Merz 1968, 14).\n",
        "\n",
        "&nbsp;\n",
        "\n",
        "Merz, Ludwig.1968. \"Grundkurs der Messtechnik. Teil I: Das Messen elektrischer Größen.\" 2. Auflage. München;Wien. R. Oldenbourg Verlag. \n",
        "\n",
        ":::\n",
        "\n",
        "**to do: Größtfehler ergänzen**\n",
        "\n",
        "In diesem Baustein werden die folgenden Module verwendet:\n"
      ],
      "id": "a7683626"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import numpy.polynomial.polynomial as poly\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import scipy\n",
        "import glob"
      ],
      "id": "5a8ebbbf",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Physikalische Größen werden mit der Hilfe von Messgeräten bestimmt. Diese ordnen der tatsächlichen Merkmalsausprägung eine numerische Entsprechung relativ zu einem Bezugssystem zu.\n",
        "\n",
        "Ein Beispiel: \"Johanna ist am Messbrett 173 Zentimeter groß.\"\n",
        "\n",
        "  - Die tatsächliche Merkmalsausprägung ist Johannas Größe.\n",
        "  - Das Messgerät ist das Messbrett.\n",
        "  - Die numerische Entsprechung ist 173.\n",
        "  - Das Bezugssystem ist das metrische System.\n",
        "\n",
        "Messwerte sind aus verschiedenen Gründen Annäherungen an den wahren Wert der zugrundeliegenden physikalischen Größe. Zum einen variiert die [Größe eines Menschen im Tagesverlauf](https://www.barmer.de/presse/presseinformationen/newsletter-gesundheit-im-blick/koerpergroesse-1126334). Zum anderen ist das Messergebnis auch ein Ergebnis der verwendeten Skala. Wäre die Messung im imperialen Messsystem erfolgt, wäre Johannas Größe mit 68 Zoll bestimmt worden, was 172,72 Zentimetern entspricht.\n",
        "\n",
        "Das Messergebnis ist also keine exakte Entsprechung der tatsächlichen Merkmalsausprägung. Ein bekanntes Beispiel für die mit dem Messvorgang verbundene Unsicherheit ist das Küstenlinienparadox: Das Ergebnis der Vermessung unregelmäßiger Küstenlinien wird umso größer, je kleiner die Messabschnitte gewählt werden.\n",
        "\n",
        "::: {.border}\n",
        ":::: {#fig-coastlines layout-ncol=3}\n",
        "\n",
        "![Gerade Messabschnitte von 200 km Länge, Gesamtlänge ungefähr 2350 km](00-bilder/Britain-fractal-coastline-200km-CCBYSA3.0vonMaksim.png){fig-alt=\"Darstellung der britischen Küstenlinie mit eingezeichneten Messabschnitten.\"}\n",
        "\n",
        "![Gerade Messabschnitte von 100 km Länge, Gesamtlänge ungefähr 2775 km](00-bilder/Britain-fractal-coastline-100km-CCBYSA3.0vonMaksim.png){fig-alt=\"Darstellung der britischen Küstenlinie mit eingezeichneten Messabschnitten.\"}\n",
        "\n",
        "![Gerade Messabschnitte von 50 km Länge, Gesamtlänge ungefähr 3425 km](00-bilder/Britain-fractal-coastline-50km-CCBYSA3.0vonMaksim.png){fig-alt=\"Darstellung der britischen Küstenlinie mit eingezeichneten Messabschnitten.\"}\n",
        "\n",
        "Küstenlinienparadox\n",
        "\n",
        "::::\n",
        "\n",
        "Britain-fractal-coastline-200km, Britain-fractal-coastline-100km und Britain-fractal-coastline-50km von Maksim stehen unter der Lizenz [CC BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/deed.de) und sind abrufbar auf Wikipedia ([200km](https://de.wikipedia.org/wiki/Datei:Britain-fractal-coastline-200km.png), [100km](https://de.wikipedia.org/wiki/Datei:Britain-fractal-coastline-100km.png), [50km](https://de.wikipedia.org/wiki/Datei:Britain-fractal-coastline-50km.png)). 2006\n",
        "\n",
        ":::\n",
        "\n",
        "&nbsp;\n",
        "\n",
        "## Messung\n",
        "\n",
        ":::{#imp-Beispiel .callout-important}\n",
        "## Messung\n",
        "\n",
        "\"Eine Messung ist der experimentelle Vorgang, durch den ein spezieller Wert einer physikalischen Größe als Vielfaches einer Einheit oder eines Bezugswertes ermittelt wird.\n",
        "\n",
        "Die Messung ergibt zunächst einen Messwert. Dieser stimmt aber aufgrund störender Einflüsse mit dem wahren Wert der Messgröße praktisch nie überein, sondern weist eine gewisse Messabweichung auf. Zum *vollständigen Messergebnis* wird der Messwert, wenn er mit quantitativen Aussagen über die zu erwartende Größe der Messabweichung ergänzt wird. Dies wird in der Messtechnik als Teil der Messaufgabe und damit der Messung verstanden.\"\n",
        "\n",
        "Messung. von verschiedenen [Autor:innen](https://xtools.wmcloud.org/authorship/de.wikipedia.org/Messung) steht unter der Lizenz [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/deed.de) ist abrufbar auf [Wikipedia] (https://de.wikipedia.org/wiki/Messung). 2025\n",
        "\n",
        " - Die ideale Messung ist eine direkte Messung oder der gesuchte Wert hängt linear (**direkt?!**) vom gemessenen Wert ab.\n",
        "  - Die ideale Messung ist *genau* und *präzise*.\n",
        ":::\n",
        "\n",
        "### Direkte und indirekte Messung\n",
        "Bei einer direkten Messung wird die Messgröße durch den unmittelbaren Vergleich mit einem Normal oder einem genormten Bezugssystem gewonnen.\n",
        "\n",
        "::: {.border}\n",
        ":::: {#fig-direktemessung layout-ncol=2}\n",
        "\n",
        "![Balkenwaage](00-bilder/balkenwaage.png){height=200 fig-alt=\"Schema einer Balkenwaage\"}\n",
        "\n",
        "![Zollstock](00-bilder/Gliederma%C3%9Fst%C3%A4be-von-Fst76-CC-BY-SA-3.0.jpg){height=200 fig-alt=\"Mehrere Zollstöcke\"}\n",
        "\n",
        "Direkte Messung\n",
        "\n",
        "::::\n",
        "\n",
        "Gliedermaßstäbe von Fst76 ist lizensiert unter [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/) und ist abrufbar auf [Wikimedia](https://commons.wikimedia.org/wiki/File:Gliederma%C3%9Fst%C3%A4be.jpg). 2014\n",
        ":::\n",
        "\n",
        "&nbsp;\n",
        "\n",
        "Bei einer indirekten Messung wird die Messgröße auf eine andere pyhsikalische Größe zurückgeführt.\n",
        "\n",
        "::: {.border}\n",
        ":::: {#fig-indirektemessung layout-ncol=2}\n",
        "\n",
        "![Federwaage](00-bilder/Spring_scale-von-Amada44-CC-BY-SA-3.0unported.jpg){height=200 fig-alt=\"Bild einer Feederwaage\"}\n",
        "\n",
        "![Laserentfernungsmessung](00-bilder/observe-the-moon-NASA.png){height=200 fig-alt=\"Laserentfernungsmessung\"}\n",
        "\n",
        "Indirekte Messung\n",
        "\n",
        "::::\n",
        "\n",
        "Spring scale von Amada44 steht unter der Lizenz [CC-BY-SA-3.0 unported](https://creativecommons.org/licenses/by-sa/3.0/deed.en) und ist abrufbar auf [Wikimedia](https://commons.wikimedia.org/wiki/File:Spring_scale_-_3241.jpg). 2016\n",
        "\n",
        "Observe the Moon wurde von der NASA veröffentlicht und ist abrufbar unter [nasa.gov](https://www.nasa.gov/image-article/observe-moon/). 2010\n",
        "\n",
        ":::\n",
        "\n",
        "&nbsp;\n",
        "\n",
        "### Genauigkeit und Präzision\n",
        "\n",
        "::: {#fig-genauigkeit layout-ncol=2}\n",
        "![Genauigkeit](00-bilder/Genauigkeit.png){fig-alt=\"Stilisiertes Bild einer Zielscheibe mit 5 Treffern, die um den Mittelpunkt streuen.\"}\n",
        "\n",
        "![Präsizion](00-bilder/Pr%C3%A4zision.png){fig-alt=\"Stilisiertes Bild einer Zielscheibe mit 5 Treffern, die eng beieinander, aber vom Mittelpunkt entfernt liegen.\"}\n",
        "\n",
        "Die Genauigkeit einer Messung ist ein Maß für die Abweichung der Messwerte vom realen Wert. Die Genauigkeit ist nur bestimmbar, wenn anerkannte Referenzwerte vorhanden sind.\n",
        "\n",
        "Die Präzision einer Messung beschreibt, wie gut die einzelnen Messwerte miteinander übereinstimmen. Die Präszision einer Messung wird über die Standardabweichung der Stichprobe bestimmt.\n",
        "\n",
        "Genauigkeit und Präzision\n",
        ":::\n",
        "\n",
        "## Messreihen\n",
        "Um die Unsicherheit einer Messung zu verringern, kann man einen Messwert in Form einer Messreihe wiederholt aufnehmen. Die (**erste**) beste Schätzung der Messgröße bietet der arithmetische Mittelwert der Messreihe.\n",
        "\n",
        "Der arithmetische Mittelwert einer Messreihe $\\bar{x}$ ist die Summe aller Einzelmesswerte dividiert durch die Anzahl der Messwerte $N$.\n",
        "\n",
        "$$\n",
        "\\bar{x} = \\frac{1}{N} \\sum_{i=1}^{N} x_i\n",
        "$$\n",
        "\n",
        "Mit Hilfe des arithmetischen Mittelwerts kann eine Aussage über die Streuung der Messwerte und die Präzision der Messung getroffen werden. Dazu werden die Varianz und die Standardabweichung der Messreihe berechnet.\n",
        "\n",
        "::: {.panel-tabset}\n",
        "## Varianz\n",
        "\n",
        "Die Varianz ist der Mittelwert der quadrierten Abweichungen vom Mittelwert.\n",
        "\n",
        "$$\n",
        "\\text{Var}(x_i) = \\frac{1}{N} \\sum_{i=1}^{N}(x_i - \\bar{x})^2\n",
        "$$\n",
        "\n",
        "## Standardabweichung\n",
        "Die Quadratwurzel der Varianz wird als Standardabweichung bezeichnet. Diese hat den Vorteil, dass sie in der Einheit der Messwerte vorliegt und dadurch leichter zu interpretieren ist. Die Standardabweichung $s$ wird so berechnet:\n",
        "\n",
        "$$\n",
        "s_{N} = \\sqrt{\\frac{1}{N} \\sum_{i=1}^{N}(x_i - \\bar{x})^2}\n",
        "$$\n",
        "\n",
        "Für Stichproben wird die Stichprobenvarianz verwendet. Für die Standardabweichung einer Stichprobe gilt:\n",
        "\n",
        "$$\n",
        "s_{N-1} = \\sqrt{\\frac{1}{N-1} \\sum_{i=1}^{N}(x_i - \\bar{x})^2}\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        "Da die Varianz das Quadrat der Standardabweichung $s$ ist, wird diese häufig mit $s^{2}$ gekennzeichnet.\n",
        "\n",
        ":::{#wrn-Grundgesamtheit .callout-warning appearance=\"simple\"}\n",
        "## Standardabweichung und Varianz in der Grundgesamtheit\n",
        "\n",
        "In der Stochastik werden Formeln häufig auch mit griechischen Buchstaben geschrieben, wenn Sie sich statt auf eine Stichprobe auf die Grundgesamtheit beziehen. \n",
        "\n",
        "Der Mittelwert in der Grundgesamtheit wird auch Erwartungswert genannt und mit dem griechischen Buchstaben $\\mu$ (My) dargestellt. Die Standardabweichung des Erwartungswerts wird mit $\\sigma$ (Sigma) gekennzeichnet.\n",
        "$$\n",
        "\\sigma = \\sqrt{\\frac{1}{N} \\sum_{i=1}^{N}(x_i - \\mu)^2}\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        "Mit Hilfe der Standardabweichung kann der *Standardfehler* der Messung bestimmt werden. Der Standardfehler ist ein Maß dafür, wie genau sich der arithmetische Mittelwert der Stichprobe an den tatsächlichen Mittelwert der Grundgesamtheit, den Erwartungswert, annähert (dazu gleich mehr) und wird auch *Stichprobenfehler* genannt. Der Standardfehler wird aus der Standardabweichung einer Messung und der Wurzel der Stichprobengröße berechnet. Da die Varianz in der Grundgesamtheit in der Regel unbekannt ist, wird der Standardfehler mit der Stichprobenvarianz geschätzt.\n",
        "\n",
        "$$\n",
        "\\sigma_{\\bar{x}} ~ = ~ \\frac{s}{\\sqrt{N}}\n",
        "$$\n",
        "\n",
        "Der Standardfehler wird umso kleiner (die Messung umso präziser), je kleiner die Varianz in der Grundgesamtheit und je größer der Stichprobenumfang ist.\n",
        "\n",
        "Dies lässt sich mit einem simulierten Würfelexperiment verdeutlichen. Bei einem idealen, fairen Würfel kommt jede Augenzahl gleich oft vor. Der Erwartungswert eines sechsseitigen Würfels ist:\n",
        "\n",
        "$$\n",
        "\\frac{1}{6} \\sum_{i=1}^{i=6}(x_i) ~ = ~ 3,5\n",
        "$$\n",
        "\n",
        "Die Standardabweichung eines fairen, sechsseitigen Würfels beträgt:\n",
        "\n",
        "$$\n",
        "\\sqrt{\\frac{1}{6} \\sum_{i=1}^{i=6}(x_i - 3,5)^2} ~ \\approx ~ 1,71 \n",
        "$$\n",
        "\n",
        "Da die Varianz in der Grundgesamtheit bekannt ist, hängt der Standardfehler des Mittelwerts eines fairen Würfels allein von der Stichprobengröße ab.\n",
        "\n",
        "### Experiment Verteilungskenngrößen\n",
        "In einem simulierten Experiment würfeln 100 Personen jeweils 3, 10 und 50 Mal und bilden den Mittelwert der Augen. Weil ein fairer Würfel simuliert wird, kann der Standardfehler mit der Standardabweichung der Grundgesamtheit berechnet werden.\n",
        "\n",
        "::: {.panel-tabset}\n",
        "## Ergebnisse"
      ],
      "id": "4502012c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "personen = 100\n",
        "standardabweichung_grundgesamtheit = np.arange(1, 7).std(ddof = 0)\n",
        "seed = 1\n",
        "\n",
        "# 3 Würfe\n",
        "würfe = 3\n",
        "\n",
        "## Personen stehen in den Zeilen (axis = 0), Würfe in den Spalten (axis = 1)\n",
        "augen3 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "## zeilenweise Mittelwert bilden mit np.array.mean(axis = 1)\n",
        "print(f\"Würfe pro Person: {würfe}\\t\\t\\t\\t\",\n",
        "      f\"Stichprobengröße: {würfe * personen}\\n\",\n",
        "      f\"kleinster Mittelwert: {augen3.mean(axis = 1).min():.2f}\\t\\t\",\n",
        "      f\"größter Mittelwert: {augen3.mean(axis = 1).max():.2f}\\n\",\n",
        "      f\"Stichprobenmittelwert: {augen3.mean():.2f}\\t\\t\",\n",
        "      f\"Standardfehler: {standardabweichung_grundgesamtheit / ( augen3.size ** (1/2) ):.2f}\\n\",\n",
        "      sep = \"\")\n",
        "\n",
        "# 10 Würfe\n",
        "würfe = 10\n",
        "\n",
        "## Personen stehen in den Zeilen (axis = 0), Würfe in den Spalten (axis = 1)\n",
        "augen10 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "## zeilenweise Mittelwert bilden mit np.array.mean(axis = 1)\n",
        "print(f\"Würfe pro Person: {würfe}\\t\\t\\t\",\n",
        "      f\"Stichprobengröße: {würfe * personen}\\n\",\n",
        "      f\"kleinster Mittelwert: {augen10.mean(axis = 1).min():.2f}\\t\\t\",\n",
        "      f\"größter Mittelwert: {augen10.mean(axis = 1).max():.2f}\\n\",\n",
        "      f\"Stichprobenmittelwert: {augen10.mean():.2f}\\t\\t\",\n",
        "      f\"Standardfehler: {standardabweichung_grundgesamtheit / ( augen10.size ** (1/2) ):.2f}\\n\",\n",
        "      sep = \"\")\n",
        "\n",
        "# 50 Würfe\n",
        "würfe = 50\n",
        "\n",
        "## Personen stehen in den Zeilen (axis = 1), Würfe in den Spalten (axis = 1)\n",
        "augen50 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "## zeilenweise Mittelwert bilden mit np.array.mean(axis = 1)\n",
        "print(f\"Würfe pro Person: {würfe}\\t\\t\\t\",\n",
        "      f\"Stichprobengröße: {würfe * personen}\\n\",\n",
        "      f\"kleinster Mittelwert: {augen50.mean(axis = 1).min():.2f}\\t\\t\",\n",
        "      f\"größter Mittelwert: {augen50.mean(axis = 1).max():.2f}\\n\",\n",
        "      f\"Stichprobenmittelwert: {augen50.mean():.2f}\\t\\t\",\n",
        "      f\"Standardfehler: {standardabweichung_grundgesamtheit / ( augen50.size ** (1/2) ):.2f}\\n\",\n",
        "      sep = \"\")"
      ],
      "id": "f3c701bb",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Mit zunehmender Anzahl an Würfen nähern sich Minimum und Maximum der individuellen Durchschnittswerte sowie der Stichprobenmittelwert dem Erwartungswert an.\n",
        "\n",
        "*Hinweis: Da das Skript dynamisch generiert wird, wurden die Zufallszahlen von einem festgelegten Startwert aus erzeugt.*\n",
        "\n",
        "## grafische Darstellung\n",
        "Die Häufigkeit der individuellen Mittelwerte ist in den folgenden Histogrammen dargestellt.\n"
      ],
      "id": "7c9bfd2e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-alt: \"Dargestellt sind drei Histogramme für 3, 10 und 30 Würfe pro Person. Während für 3 Würfe noch ein breites Spektrum an Mittelwerten erzielt wird, wird die Streuung für 10 und 30 Würfe pro Person immer enger.\"\n",
        "\n",
        "personen = 100\n",
        "standardabweichung_grundgesamtheit = np.arange(1, 7).std(ddof = 0)\n",
        "seed = 1\n",
        "\n",
        "# 3 Würfe\n",
        "würfe = 3\n",
        "augen3 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "# 10 Würfe\n",
        "würfe = 10\n",
        "augen10 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "# 50 Würfe\n",
        "würfe = 50\n",
        "augen50 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "# plotten\n",
        "bins = 10\n",
        "\n",
        "# 3 Würfe\n",
        "fig, (ax1, ax2, ax3) = plt.subplots(1, 3, sharey = True)\n",
        "\n",
        "ax1.hist(augen3.mean(axis = 1), bins = bins, alpha = 0.6, edgecolor = 'black', range = (1, 6))\n",
        "ax1.set_xlim(1, 6)\n",
        "ax1.axvline(x = 3.5, ymin = 0, ymax = 1, color = 'black', label = 'Erwartungswert')\n",
        "ax1.set_ylabel('Häufigkeit Mittelwert')\n",
        "ax1.set_title(\"3 Würfe pro Person\")\n",
        "ax1.legend(loc = 'lower left', bbox_to_anchor = (0, -0.2))\n",
        "\n",
        "# 10 Würfe\n",
        "ax2.hist(augen10.mean(axis = 1), bins = bins, alpha = 0.6, edgecolor = 'black', range = (1, 6))\n",
        "ax2.set_xlim(1, 6)\n",
        "ax2.axvline(x = 3.5, ymin = 0, ymax = 1, color = 'black')\n",
        "ax2.set_title(\"10 Würfe pro Person\")\n",
        "\n",
        "# 30 Würfe\n",
        "ax3.hist(augen50.mean(axis = 1), bins = bins, alpha = 0.6, edgecolor = 'black', range = (1, 6))\n",
        "ax3.set_xlim(1, 6)\n",
        "ax3.axvline(x = 3.5, ymin = 0, ymax = 1, color = 'black')\n",
        "ax3.set_title(\"30 Würfe pro Person\")\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "d80adaad",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Code\n",
        "Berechnung\n"
      ],
      "id": "b441d62a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "\n",
        "personen = 100\n",
        "standardabweichung_grundgesamtheit = np.arange(1, 7).std(ddof = 0)\n",
        "seed = 1\n",
        "\n",
        "# 3 Würfe\n",
        "würfe = 3\n",
        "\n",
        "## Personen stehen in den Zeilen (axis = 0), Würfe in den Spalten (axis = 1)\n",
        "augen3 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "## zeilenweise Mittelwert bilden mit np.array.mean(axis = 1)\n",
        "print(f\"Würfe pro Person: {würfe}\\t\\t\\t\\t\",\n",
        "      f\"Stichprobengröße: {würfe * personen}\\n\",\n",
        "      f\"kleinster Mittelwert: {augen3.mean(axis = 1).min():.2f}\\t\\t\",\n",
        "      f\"größter Mittelwert: {augen3.mean(axis = 1).max():.2f}\\n\",\n",
        "      f\"Stichprobenmittelwert: {augen3.mean():.2f}\\t\\t\",\n",
        "      f\"Standardfehler: {standardabweichung_grundgesamtheit / ( augen3.size ** (1/2) ):.2f}\\n\",\n",
        "      sep = \"\")\n",
        "\n",
        "# 10 Würfe\n",
        "würfe = 10\n",
        "\n",
        "## Personen stehen in den Zeilen (axis = 0), Würfe in den Spalten (axis = 1)\n",
        "augen10 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "## zeilenweise Mittelwert bilden mit np.array.mean(axis = 1)\n",
        "print(f\"Würfe pro Person: {würfe}\\t\\t\\t\",\n",
        "      f\"Stichprobengröße: {würfe * personen}\\n\",\n",
        "      f\"kleinster Mittelwert: {augen10.mean(axis = 1).min():.2f}\\t\\t\",\n",
        "      f\"größter Mittelwert: {augen10.mean(axis = 1).max():.2f}\\n\",\n",
        "      f\"Stichprobenmittelwert: {augen10.mean():.2f}\\t\\t\",\n",
        "      f\"Standardfehler: {standardabweichung_grundgesamtheit / ( augen10.size ** (1/2) ):.2f}\\n\",\n",
        "      sep = \"\")\n",
        "\n",
        "# 50 Würfe\n",
        "würfe = 50\n",
        "\n",
        "## Personen stehen in den Zeilen (axis = 1), Würfe in den Spalten (axis = 1)\n",
        "augen50 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "## zeilenweise Mittelwert bilden mit np.array.mean(axis = 1)\n",
        "print(f\"Würfe pro Person: {würfe}\\t\\t\\t\",\n",
        "      f\"Stichprobengröße: {würfe * personen}\\n\",\n",
        "      f\"kleinster Mittelwert: {augen50.mean(axis = 1).min():.2f}\\t\\t\",\n",
        "      f\"größter Mittelwert: {augen50.mean(axis = 1).max():.2f}\\n\",\n",
        "      f\"Stichprobenmittelwert: {augen50.mean():.2f}\\t\\t\",\n",
        "      f\"Standardfehler: {standardabweichung_grundgesamtheit / ( augen50.size ** (1/2) ):.2f}\\n\",\n",
        "      sep = \"\")"
      ],
      "id": "5ccc5b4e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Darstellung\n"
      ],
      "id": "379de3c8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "\n",
        "personen = 100\n",
        "standardabweichung_grundgesamtheit = np.arange(1, 7).std(ddof = 0)\n",
        "seed = 1\n",
        "\n",
        "# 3 Würfe\n",
        "würfe = 3\n",
        "augen3 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "# 10 Würfe\n",
        "würfe = 10\n",
        "augen10 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "# 50 Würfe\n",
        "würfe = 50\n",
        "augen50 = np.random.default_rng(seed = seed).integers(low = 1, high = 6, endpoint = True, size = (personen, würfe)) # high is exclusive if endpoint = False\n",
        "\n",
        "# plotten\n",
        "bins = 10\n",
        "\n",
        "# 3 Würfe\n",
        "fig, (ax1, ax2, ax3) = plt.subplots(1, 3, sharey = True)\n",
        "\n",
        "ax1.hist(augen3.mean(axis = 1), bins = bins, alpha = 0.6, edgecolor = 'black', range = (1, 6))\n",
        "ax1.set_xlim(1, 6)\n",
        "ax1.axvline(x = 3.5, ymin = 0, ymax = 1, color = 'black', label = 'Erwartungswert')\n",
        "ax1.set_ylabel('mittleres Würfelergebnis')\n",
        "ax1.set_ylabel('Häufigkeit Mittelwert')\n",
        "ax1.set_title(\"3 Würfe pro Person\")\n",
        "ax1.legend(loc = 'lower left', bbox_to_anchor = (0, -0.2))\n",
        "\n",
        "# 10 Würfe\n",
        "ax2.hist(augen10.mean(axis = 1), bins = bins, alpha = 0.6, edgecolor = 'black', range = (1, 6))\n",
        "ax2.set_xlim(1, 6)\n",
        "ax2.axvline(x = 3.5, ymin = 0, ymax = 1, color = 'black')\n",
        "ax2.set_ylabel('mittleres Würfelergebnis')\n",
        "ax2.set_title(\"10 Würfe pro Person\")\n",
        "\n",
        "# 30 Würfe\n",
        "ax3.hist(augen50.mean(axis = 1), bins = bins, alpha = 0.6, edgecolor = 'black', range = (1, 6))\n",
        "ax3.set_xlim(1, 6)\n",
        "ax3.axvline(x = 3.5, ymin = 0, ymax = 1, color = 'black')\n",
        "ax3.set_ylabel('mittleres Würfelergebnis')\n",
        "ax3.set_title(\"30 Würfe pro Person\")\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "3a7b2b97",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "### Aufgabe Verteilungskenngrößen\n",
        "Im Datensatz ToothGrowth.csv ist eine Messreihe zur Länge zahnbildender Zellen bei Meerschweinchen gespeichert. Die Tiere erhielten Vitamin C direkt (VC) oder in Form von Orangensaft (OJ) in unterschiedlichen Dosen.\n",
        "\n",
        ":::: {.border}\n",
        "\n",
        "::::: {#lst-readfile}"
      ],
      "id": "67034461"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "dateipfad = \"01-daten/ToothGrowth.csv\"\n",
        "meerschweinchen = pd.read_csv(filepath_or_buffer = dateipfad, sep = ',', header = 0, \\\n",
        "  names = ['ID', 'len', 'supp', 'dose'], dtype = {'ID': 'int', 'len': 'float', 'dose': 'float', 'supp': 'category'})"
      ],
      "id": "9685adf2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::::\n",
        "\n",
        "Crampton, E. W. 1947. „THE GROWTH OF THE ODONTOBLASTS OF THE INCISOR TOOTH AS A CRITERION OF THE VITAMIN C INTAKE OF THE GUINEA PIG“. The Journal of Nutrition 33 (5): 491–504. <https://doi.org/10.1093/jn/33.5.491> \n",
        "\n",
        "Der Datensatz kann in R mit dem Befehl \"ToothGrowth\" aufgerufen werden.\n"
      ],
      "id": "754e7968"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false \n",
        "#| fig-alt: Illustrative Darstellung der Zahnlänge in der Spalte 'len'\n",
        "\n",
        "meerschweinchen['len'].plot(x = 'ID', y = 'len', title = 'Länge der zahnbildenden Zellen von Meerschweinchen', xlabel = 'Nummer', ylabel = 'Länge in Micron')"
      ],
      "id": "d30d7ae7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::::\n",
        "\n",
        "&nbsp;\n",
        "\n",
        "**Berechnen Sie den arithmetischen Mittelwert, die Varianz, die Standardabweichung und den Stichprobenfehler der Messreihe zur Zahnlänge (len). Verwenden Sie dazu die vorgestellten Formeln.**\n",
        "\n",
        "Das Ergebnis könnte so aussehen:\n"
      ],
      "id": "4cc79223"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "def verteilungskennwerte(x, output = True):\n",
        "\n",
        "  # Anzahl Messwerte bestimmen\n",
        "  N = len(x)\n",
        "\n",
        "  # arithmetisches Mittel bestimmen\n",
        "  stichprobenmittelwert = sum(x) / N\n",
        "\n",
        "  # Stichprobenvarianz bestimmen\n",
        "  stichprobenvarianz = sum((x - stichprobenmittelwert) ** 2) / (N - 1)\n",
        "\n",
        "  # Standardabweichung bestimmen\n",
        "  standardabweichung = stichprobenvarianz ** (1/2)\n",
        "\n",
        "  # Stichprobenfehler bestimmen\n",
        "  stichprobenfehler = standardabweichung / (N ** (1/2))\n",
        "\n",
        "  # Ausgabe\n",
        "  if output: # output = True\n",
        "    print(f\"N: {N}\\n\",\n",
        "          f\"arithmetisches Mittel: {stichprobenmittelwert:.2f}\\n\",\n",
        "          f\"Stichprobenfehler: {stichprobenfehler:.2f}\\n\",\n",
        "          f\"Stichprobenvarianz: {stichprobenvarianz:.2f}\\n\",\n",
        "          f\"Standardabweichung: {standardabweichung:.2f}\",\n",
        "          sep = '')\n",
        "\n",
        "  else: # output = False\n",
        "    return N, stichprobenmittelwert, stichprobenfehler, stichprobenvarianz, standardabweichung\n",
        "\n",
        "verteilungskennwerte(meerschweinchen['len'])"
      ],
      "id": "f8b64638",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::: {#tip-loesungkenngrößen .callout-tip collapse=\"true\"}\n",
        "## Musterlösung Verteilungskenngrößen\n"
      ],
      "id": "2e44a58b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "\n",
        "\n",
        "def verteilungskennwerte(x, output = True):\n",
        "\n",
        "  # Anzahl Messwerte bestimmen\n",
        "  N = len(x)\n",
        "\n",
        "  # arithmetisches Mittel bestimmen\n",
        "  stichprobenmittelwert = sum(x) / N\n",
        "\n",
        "  # Stichprobenvarianz bestimmen\n",
        "  stichprobenvarianz = sum((x - stichprobenmittelwert) ** 2) / (N - 1)\n",
        "\n",
        "  # Standardabweichung bestimmen\n",
        "  standardabweichung = stichprobenvarianz ** (1/2)\n",
        "\n",
        "  # Stichprobenfehler bestimmen\n",
        "  stichprobenfehler = standardabweichung / (N ** (1/2))\n",
        "\n",
        "  # Ausgabe\n",
        "  if output: # output = True\n",
        "    print(f\"N: {N}\\n\",\n",
        "          f\"arithmetisches Mittel: {stichprobenmittelwert:.2f}\\n\",\n",
        "          f\"Stichprobenfehler: {stichprobenfehler:.2f}\\n\",\n",
        "          f\"Stichprobenvarianz: {stichprobenvarianz:.2f}\\n\",\n",
        "          f\"Standardabweichung: {standardabweichung:.2f}\",\n",
        "          sep = '')\n",
        "\n",
        "  else: # output = False\n",
        "    return N, stichprobenmittelwert, stichprobenfehler, stichprobenvarianz, standardabweichung\n",
        "\n",
        "verteilungskennwerte(meerschweinchen['len'])"
      ],
      "id": "f6dea72c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "Die Module NumPy und Pandas verfügen über eigene Funktionen zur Berechnung der Varianz und der Standardabweichung (siehe folgendes Beispiel).\n",
        "\n",
        "### Varianz und  Standardabweichung mit NumPy und Pandas\n",
        "\n",
        "Die Varianz und Standardabweichung werden mit den Funktion `np.var()` und `np.std()` bzw. den Methoden `pd.var()` und `pd.std()` berechnet. Der Parameter `ddof` (delta degrees of freedom) steuert, welcher Nenner zur Berechnung der Varianz verwendet wird in der Form N - ddof. Während der Standardwert in NumPy 0 ist, berechnet Pandas mit dem Standardwert `ddof=1` die Stichprobenvarianz."
      ],
      "id": "42867736"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "print(\"Varianz:\")\n",
        "print(f\"NumPy:\\t{np.var(meerschweinchen['len']):.2f}\")\n",
        "print(f\"Pandas:\\t{meerschweinchen['len'].var():.2f}\")\n",
        "\n",
        "print(\"\\nStandardabweichung:\")\n",
        "print(f\"NumPy:\\t{np.std(meerschweinchen['len']):.2f}\")\n",
        "print(f\"Pandas:\\t{meerschweinchen['len'].std():.2f}\")"
      ],
      "id": "e3af0c15",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\mapoe004\\AppData\\Local\\Programs\\Python\\Python312\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}